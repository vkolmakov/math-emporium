@import "variables";

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
            str-replace(
                str-slice($string, $index + str-length($search)),
                $search,
                $replace
            );
    }

    @return $string;
}

@function to-string($value) {
    @return inspect($value);
}

@mixin rounded-border {
    border: 1px solid $border-color-for-controls;
    @include border-radius(5px);
}

@mixin rounded-border-enlarge {
    @include border-radius(5px);
    border: 2px solid $border-color-for-controls;
}

@mixin set-font {
    font-family: $font-family;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin url {
    text-decoration: none;
}

@mixin input {
    @include input-no-rounded-border();
    @include rounded-border();
}

@mixin select-input-override-browser-styling($color) {
    appearance: none;

    // using %23 instead of # for the color due to https://www.chromestatus.com/features/5656049583390720
    $color-encoded: str-replace(to-string($color), "#", "%23");

    background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='#{$color-encoded}'><polygon points='0,0 10,0 5,5'/></svg>");
    background-size: 0.75em;
    background-position: calc(100% - 10px) 70%;
    background-repeat: no-repeat;
    background-color: white;
}

@mixin input-no-rounded-border {
    border: 1px solid $border-color-for-controls;
    @include box-sizing(border-box);
    @include set-font();
    background-color: white;
    padding: 0 0.5em;
    font-size: 16px;
    height: 34px;
    width: 100%;
}

@mixin button {
    @include url();
    @include rounded-border();
    cursor: pointer;
    text-align: center;
}

@mixin destructive {
    background-color: $danger-color;
    color: $danger-text-color;

    &:hover,
    &:focus {
        background-color: darken($danger-color, 10%);
    }
}

@mixin nondestructive {
    background-color: $primary-color;
    color: $primary-text-color;

    &:hover,
    &:focus {
        background-color: $primary-color-focused;
    }
}

@mixin set-react-select-selection-area-size($size) {
    > .Select-menu-outer {
        max-height: $size !important;
        > .Select-menu {
            max-height: $size !important;
        }
    }
}

@mixin reserve-space-for-bold-text {
    &::after {
        display: block;
        content: attr(data-text);
        font-weight: bold;
        height: 0;
        overflow: hidden;
        visibility: hidden;
    }
}

@mixin mobile-vh($vh) {
    @media (max-device-aspect-ratio: 3/4) {
        height: 100vw * (1.333 * $vh / 100);
    }
    @media (max-device-aspect-ratio: 2/3) {
        height: 100vw * (1.5 * $vh / 100);
    }
    @media (max-device-aspect-ratio: 10/16) {
        height: 100vw * (1.6 * $vh / 100);
    }
    @media (max-device-aspect-ratio: 9/16) {
        height: 100vw * (1.778 * $vh / 100);
    }
    height: 100vh;
}

@mixin on-medium-screen() {
    @media (min-width: $medium-screen) {
        @content;
    }
}
