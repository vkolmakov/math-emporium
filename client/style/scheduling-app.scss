@import "variables";
@import "mixins";

$gutter-size: 0.75em;

.show-schedule-controls {
    display: flex;
    align-items: center;

    flex-flow: column wrap;

    @include breakpoint($medium-screen) {
        flex-flow: row nowrap;
        .column:not(:last-child) {
            margin-right: 0.5em;
        }
        .column:last-child {
            margin-left: 0.5em;
        }
    }

    .column {
        width: 100%;
    }

    .input-group {
        flex: 1;
        width: 100%;
        padding-bottom: 0.25em;

        .select-filter-error {
            @include rounded-border-enlarge;
            border-color: $danger-color;
        }

        .select-filter-empty {
            color: $primary-text-color;
            &:disabled,
            &[disabled] {
                color: #aaa;
            }
        }

        > .dual-datepicker-wrap {
            display: flex;

            $datepicker-height: 34px;

            &.has-focus {
                outline: 1px dotted #212121;
                outline: 5px auto -webkit-focus-ring-color;
            }

            > div {
                // this is required to make sure that
                // nameless div that hosts react datepicker
                // will take up all of the available space.
                flex: 1;
            }

            .react-datepicker-wrapper {
                width: 100%;
            }

            .react-datepicker__input-container,
            .dual-datepicker__inactive-input-container {
                > input {
                    @include input-no-rounded-border();
                }

                width: 100%;
                height: $datepicker-height;
            }

            /**
             * Following styles handle rounded borders for the dual datepicker
             */

            // left side of the datepicker
            .react-datepicker__input-container > input {
                border-radius: 5px 0 0 5px;
            }

            // right side of the datepicker
            .dual-datepicker__inactive-input-container > input {
                border-radius: 0 5px 5px 0;
                // this is needed to avoid two borders in the middle
                // stacking up
                border-left: 0;
            }
        }
    }
}

/**
 * react-datepicker style overrides
 */
.react-datepicker {
    @include set-font();

    &__week {
        &:hover,
        &:focus {
            background-color: $tertiary-color;
        }
    }

    &__header {
        background-color: lighten($tertiary-color, 25%);
    }

    &__day {
        // Swap margin and padding for every date cell.
        // Margin leaves gaps that are not clickable and
        // gaps created by padding are clickable, which makes
        // it easier to start treating a click on any of the days
        // as a week selection.
        margin: 0;
        padding: 0.166rem;

        border-radius: 0;

        &:hover,
        &:focus {
            // Keep the same color on hover since we're not concerned
            // with individual days.
            background-color: inherit;
            border-radius: 0;
        }

        &--in-range {
            // currently-selected week
            background-color: $primary-color;
            color: black;

            &:hover,
            &:focus {
                // Same idea here, make sure to not single out any particular day
                background-color: $primary-color;
                border-radius: 0;
            }
        }
    }
}

.open-spots-message {
    $message-text-color: darken($tertiary-color, 70%);

    @include breakpoint($medium-screen) {
        margin: 2em auto;
    }

    @mixin open-spots-message {
        color: $message-text-color;

        @include breakpoint($medium-screen) {
            max-width: 35em;
            margin: 0 auto;
            text-align: center;
        }
    }

    .missing-item-info {
        @include open-spots-message;
    }

    .open-spots-message-main {
        @include open-spots-message;
    }

    .loading {
        margin: 0 auto;
    }

    .locations-info {
        display: flex;
        flex-flow: column nowrap;

        padding: 1em;
        padding-top: 0;

        margin: 0;

        list-style: none;

        @include breakpoint($medium-screen) {
            flex-flow: row wrap;
            justify-content: space-around;
        }
    }

    .locations-info-location-container {
        margin: 1em 0;

        @mixin location-info-line {
            color: darken($tertiary-color, 70%);
            margin: 0;

            @include breakpoint($medium-screen) {
                text-align: center;
            }
        }

        @include breakpoint($medium-screen) {
            margin: 1em;
            flex: 1;
            max-width: 20em;
        }

        .name {
            @include location-info-line;
        }

        .description {
            @include location-info-line;
        }

        .location-info-link {
            color: $primary-text-color;
        }

        .contact-info {
            margin-top: 0.5em;

            .address {
                @include location-info-line;
            }
            .phone {
                @include location-info-line;
            }
            .email {
                @include location-info-line;
            }
        }
    }
}

.open-spots-display {
    > .weekday {
        display: flex;
        flex-flow: column nowrap;

        @include breakpoint($medium-screen) {
            @include gallery(4 of 12);
        }

        > p {
            text-align: center;
        }

        @mixin spot() {
            @include rounded-border();
            text-align: center;
            text-decoration: none;
            padding: 0.5em;
            margin-bottom: 0.5em;
            font-size: 16px;
        }

        > .open-spot {
            @include spot();
            cursor: pointer;
            background-color: $primary-color;
            color: $primary-text-color;

            &:hover,
            &:focus {
                background-color: $primary-color-focused;
            }

            &:active {
                transform: translateY(1px);
            }
        }

        > .closed-spot {
            @include spot();
            cursor: not-allowed;
            background-color: $danger-color;
            color: $danger-text-color;
        }

        > .expired-spot {
            @include spot();
            cursor: not-allowed;
            background-color: $tertiary-color;
            color: $primary-text-color;
        }
    }
}

.profile-and-appointments-loading {
    display: flex;
    justify-content: center;
}

.profile-and-appointments {
    display: flex;
    flex-direction: column;
    @include breakpoint($medium-screen) {
        flex-direction: row;
    }
}

.appointments-faq {
    @include breakpoint($medium-screen) {
        flex: 3;
        padding-right: 1.5em;
    }
}

.profile {
    @include breakpoint($medium-screen) {
        flex: 2;
    }
}

.appointments-list {
    padding: 0;
}

.individual-appointment {
    display: flex;
    align-items: center;
    margin-bottom: 0.5em;
}

.individual-appointment-actions {
    margin-left: 0.5em;
}

.individual-appointment-cancel-action {
    @include button;
    @include nondestructive;

    font-size: 1em;
    padding: 10px;
    margin-left: 0.25em;
}

.faq {
    .faq-content {
        // styles for html elements generated from markdown
        a {
            color: $primary-text-color;
        }
        h2 {
            margin: 0.25em 0;
        }
        h3,
        p {
            margin: 0.75em 0;
        }
    }
}
